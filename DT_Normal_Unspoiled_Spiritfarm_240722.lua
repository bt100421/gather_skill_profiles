local tbl = 
{
	
	{
		ephemeral = true,
		g_func = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yeild = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n\td([[[SkillProfile] - Chance: ]] .. tostring(chance))\n\td([[[SkillProfile] - HQChance: ]] .. tostring(hqchance))\n\td([[[SkillProfile] - G_Level: ]] .. tostring(g_level))\n\td([[[SkillProfile] - Yeild: ]] .. tostring(yeild))\n\td([[[SkillProfile] - Req Level: ]] .. tostring(req_level))\n\td([[[SkillProfile] - Node Type: ]] .. tostring(ntype))\n\td([[[SkillProfile] - Start GP: ]] .. tostring(startgp))\n\td([[[SkillProfile] - Attempts Max: ]] .. tostring(attemptsmax))\n\td([[[SkillProfile] - Attempts: ]] .. tostring(attempts))\n\td([[[SkillProfile] - Job: ]] .. tostring(job))\t\n\td([[[SkillProfile] - GP Current: ]] .. tostring(gp_current))\n\td([[[SkillProfile] - ID: ]] .. tostring(id))\n\td([[[SkillProfile] - GPfrac: ]] .. tostring(gp_frac))\n\nend",
		id = 0,
		legend = true,
		name = "Empty Block",
		name2 = "<<< Yield >= 2 >>>",
		normal = true,
		singlecheck = false,
		singleuse = false,
		unspoil = true,
	},
	
	{
		addchain = "A",
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Gift 1\n\tif gp_frac and startgp >= 450 and yield >= 2 and ntype == \"normal\" and id >= 20 and hqchance <= 90 then\n\t\tlocal gift = ActionList:Get(1, gift_id)\n\t\tif gp_current >= 50 and table.valid(gift) and gift:IsReady() and not buffDB[2666] then\n\t\t\td([[[SkillProfile] - Cast Gift 1]])\n\t\t\treturn gift_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Gift",
		normal = true,
		singlecheck = true,
		singleuse = true,
		skip = false,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Gift 2\n\tif startgp >= 500 and startgp <= 599 and yield >= 2 and ntype == \"normal\" and id >= 20 and hqchance <= 70 then\n\t\tlocal gift2 = ActionList:Get(1, gift2_id)\n\t\tif gp_current >= 100 and table.valid(gift2) and gift2:IsReady() and not buffDB[759] then\n\t\t\td([[[SkillProfile] - Cast Gift 2]])\n\t\t\treturn gift2_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Gift2",
		normal = true,
		reqchain = "A",
		singlecheck = true,
		singleuse = true,
		skip = false,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- KY/BH2\n\tif startgp >= 600 and startgp <= 799 and yield == 2 and ntype == \"normal\" and id >= 20 then\n\t\tlocal ky2_bh2 = ActionList:Get(1, ky2_bh2_id)\n\t\tif gp_current >= 500 and table.valid(ky2_bh2) and ky2_bh2:IsReady() and not buffDB[219] then\n\t\t\td([[[SkillProfile] - Cast KY/BH2]])\n\t\t\treturn ky2_bh2_id\n\t\tend\n\tend\n\tif startgp >= 800 and yield >= 3 and ntype == \"normal\" and id >= 20 then\n\t\tlocal ky2_bh2 = ActionList:Get(1, ky2_bh2_id)\n\t\tif gp_current >= 500 and table.valid(ky2_bh2) and ky2_bh2:IsReady() and not buffDB[219] then\n\t\t\td([[[SkillProfile] - Cast KY/BH2]])\n\t\t\treturn ky2_bh2_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "KY/BH2",
		normal = true,
		reqchain = "A",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- WttW\n\tif ntype == \"normal\" and id >= 20 and attempts <= (attemptsmax - 1) then\n\t\tlocal min_wise = ActionList:Get(1, min_wise_id)\n\t\tif table.valid(min_wise) and min_wise:IsReady() then\n\t\t\td([[[SkillProfile] - Cast WttW]])\n\t\t\treturn min_wise_id\n\t\tend\n\t\tlocal bot_wise = ActionList:Get(1, bot_wise_id)\n\t\tif table.valid(bot_wise) and bot_wise:IsReady() then\n\t\t\td([[[SkillProfile] - Cast WttW]])\n\t\t\treturn bot_wise_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "WttW",
		normal = true,
		reqchain = "A",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Solid\n\tif startgp >= 800 and yield == 2 and ntype == \"normal\" and id >= 20 and attempts <= (attemptsmax - 2) then\n\t\tlocal solid = ActionList:Get(1, solid_id)\n\t\tif gp_current >= 300 and table.valid(solid) and solid:IsReady() then\n\t\t\td([[[SkillProfile] - Cast Solid]])\n\t\t\treturn solid_id\n\t\tend\n\tend\n\tif startgp >= 600 and startgp <= 799 and yield >= 3 and ntype == \"normal\" and id >= 20 and attempts <= (attemptsmax - 2) then\n\t\tlocal solid = ActionList:Get(1, solid_id)\n\t\tif gp_current >= 300 and table.valid(solid) and solid:IsReady() then\n\t\t\td([[[SkillProfile] - Cast Solid]])\n\t\t\treturn solid_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Solid",
		normal = true,
		reqchain = "A",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\tlocal playergather = Player:GetStats(72)\n\tlocal reqgather = 0\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- BH/BY2\n\tif yield >= 2 and ntype == \"normal\" and id >= 20 then\n\t\tlocal by2_bh2 = ActionList:Get(1, by2_bh2_id)\n\t\tif (startgp >= 900 or startgp <= 799) and gp_current >= 100 and table.valid(by2_bh2) and by2_bh2:IsReady() and not buffDB[1286] then\n\t\t\tif req_level <= 459 then\n\t\t\t\td([[[SkillProfile] - Node < 450 - Cast BY/BH2]])\n\t\t\t\treturn by2_bh2_id\n\t\t\t\telseif req_level > 699 then reqgather = (((req_level - 700)*10)+5085)*.9\n\t\t\t\telseif req_level > 689 then reqgather = (((req_level - 690)*10)+4965)*.9\n\t\t\t\telseif req_level > 679 then reqgather = (((req_level - 680)*10)+4845)*.9\n\t\t\t\telseif req_level > 669 then reqgather = (((req_level - 670)*10)+4725)*.9\n\t\t\t\telseif req_level > 659 then reqgather = (((req_level - 660)*10)+4605)*.9\n\t\t\t\telseif req_level > 649 then reqgather = (((req_level - 650)*10)+4485)*.9\n\t\t\t\telseif req_level > 639 then reqgather = (((req_level - 640)*10)+4365)*.9\n\t\t\t\telseif req_level > 629 then reqgather = (((req_level - 630)*10)+4245)*.9\n\t\t\t\telseif req_level > 619 then reqgather = (((req_level - 620)*10)+4125)*.9\n\t\t\t\telseif req_level > 609 then reqgather = (((req_level - 610)*10)+4005)*.9\n\t\t\t\telseif req_level > 599 then reqgather = (((req_level - 600)*10)+3885)*.9\n\t\t\t\telseif req_level > 589 then reqgather = (((req_level - 590)*10)+3765)*.9\n\t\t\t\telseif req_level > 579 then reqgather = (((req_level - 580)*10)+3645)*.9\n\t\t\t\telseif req_level > 569 then reqgather = (((req_level - 570)*10)+3525)*.9\n\t\t\t\telseif req_level > 559 then reqgather = (((req_level - 560)*10)+3420)*.9\n\t\t\t\telseif req_level > 539 then reqgather = (((req_level - 540)*10)+3210)*.9\n\t\t\t\telse \t\t\t\t\t reqgather = (((req_level - 460)*10)+2400)*.9\n\t\t\tend\n\t\t\tif playergather >= reqgather then\n\t\t\t\td([[[SkillProfile] - Cast BY/BH2]])\n\t\t\t\treturn by2_bh2_id\n\t\t\tend\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "BH/BY2",
		normal = true,
		reqchain = "A",
		singlecheck = false,
		singleuse = false,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		id = 0,
		legend = true,
		name = "Empty Block",
		name2 = "<<< Integrity >= 7 >>>",
		normal = true,
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		addchain = "B",
		chainNot = "A",
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Gift 1\n\tif gp_frac and startgp >= 450 and attemptsmax >= 7 and ntype == \"normal\" and id >= 20 and hqchance <= 90 then\n\t\tlocal gift = ActionList:Get(1, gift_id)\n\t\tif gp_current >= 50 and table.valid(gift) and gift:IsReady() and not buffDB[2666] then\n\t\t\td([[[SkillProfile] - Cast Gift 1]])\n\t\t\treturn gift_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Gift",
		normal = true,
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Gift 2\n\tif ((startgp >= 100 and startgp <= 499) or startgp >= 600) and attemptsmax >= 7 and ntype == \"normal\" and id >= 20 and hqchance <= 70 then\n\t\tlocal gift2 = ActionList:Get(1, gift2_id)\n\t\tif gp_current >= 100 and table.valid(gift2) and gift2:IsReady() and not buffDB[759] then\n\t\t\td([[[SkillProfile] - Cast Gift 2]])\n\t\t\treturn gift2_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Gift2",
		normal = true,
		reqchain = "B",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Tidings\n\tif (startgp >= 800 or (startgp >= 300 and startgp <= 499)) and attemptsmax >= 7 and ntype == \"normal\" and id >= 20 then\n\t\tlocal tidings = ActionList:Get(1, tidings_id)\n\t\tif gp_current >= 200 and table.valid(tidings) and tidings:IsReady() and not buffDB[2667] then\n\t\t\td([[[SkillProfile] - Cast Tidings]])\n\t\t\treturn tidings_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Tidings",
		normal = true,
		reqchain = "B",
		singlecheck = true,
		singleuse = true,
		skip = false,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- KY/BH2\n\tif startgp >= 500 and attemptsmax >= 7 and ntype == \"normal\" and id >= 20 then\n\t\tlocal ky2_bh2 = ActionList:Get(1, ky2_bh2_id)\n\t\tif gp_current >= 500 and table.valid(ky2_bh2) and ky2_bh2:IsReady() and not buffDB[219] then\n\t\t\td([[[SkillProfile] - Cast KY/BH2]])\n\t\t\treturn ky2_bh2_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "KY/BH2",
		normal = true,
		reqchain = "B",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\tlocal playergather = Player:GetStats(72)\n\tlocal reqgather = 0\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- BH/BY2\n\tif attemptsmax >= 7 and ntype == \"normal\" and id >= 20 then\n\t\tlocal by2_bh2 = ActionList:Get(1, by2_bh2_id)\n\t\tif (startgp >= 700 or startgp <= 450) and gp_current >= 100 and table.valid(by2_bh2) and by2_bh2:IsReady() and not buffDB[1286] then then\n\t\t\tif req_level <= 459 then\n\t\t\t\td([[[SkillProfile] - Node < 450 - Cast BY/BH2]])\n\t\t\t\treturn by2_bh2_id\n\t\t\t\telseif req_level > 699 then reqgather = (((req_level - 700)*10)+5085)*.9\n\t\t\t\telseif req_level > 689 then reqgather = (((req_level - 690)*10)+4965)*.9\n\t\t\t\telseif req_level > 679 then reqgather = (((req_level - 680)*10)+4845)*.9\n\t\t\t\telseif req_level > 669 then reqgather = (((req_level - 670)*10)+4725)*.9\n\t\t\t\telseif req_level > 659 then reqgather = (((req_level - 660)*10)+4605)*.9\n\t\t\t\telseif req_level > 649 then reqgather = (((req_level - 650)*10)+4485)*.9\n\t\t\t\telseif req_level > 639 then reqgather = (((req_level - 640)*10)+4365)*.9\n\t\t\t\telseif req_level > 629 then reqgather = (((req_level - 630)*10)+4245)*.9\n\t\t\t\telseif req_level > 619 then reqgather = (((req_level - 620)*10)+4125)*.9\n\t\t\t\telseif req_level > 609 then reqgather = (((req_level - 610)*10)+4005)*.9\n\t\t\t\telseif req_level > 599 then reqgather = (((req_level - 600)*10)+3885)*.9\n\t\t\t\telseif req_level > 589 then reqgather = (((req_level - 590)*10)+3765)*.9\n\t\t\t\telseif req_level > 579 then reqgather = (((req_level - 580)*10)+3645)*.9\n\t\t\t\telseif req_level > 569 then reqgather = (((req_level - 570)*10)+3525)*.9\n\t\t\t\telseif req_level > 559 then reqgather = (((req_level - 560)*10)+3420)*.9\n\t\t\t\telseif req_level > 539 then reqgather = (((req_level - 540)*10)+3210)*.9\n\t\t\t\telse \t\t\t\t\t reqgather = (((req_level - 460)*10)+2400)*.9\n\t\t\tend\n\t\t\tif playergather >= reqgather then\n\t\t\t\td([[[SkillProfile] - Cast BY/BH2]])\n\t\t\t\treturn by2_bh2_id\n\t\t\tend\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "BH/BY2",
		normal = true,
		reqchain = "B",
		singlecheck = false,
		singleuse = false,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		id = 0,
		legend = true,
		name = "Empty Block",
		name2 = "<<< Integrity 4-6 >>>",
		normal = true,
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		addchain = "C",
		chainNot = "A,B",
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Gift 1\n\tif gp_frac and startgp >= 450 and ntype == \"normal\" and id >= 20 and hqchance <= 90 then\n\t\tlocal gift = ActionList:Get(1, gift_id)\n\t\tif gp_current >= 50 and table.valid(gift) and gift:IsReady() and not buffDB[2666] then\n\t\t\td([[[SkillProfile] - Cast Gift 1]])\n\t\t\treturn gift_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Gift",
		normal = true,
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Gift 2\n\tif ((startgp >= 500 and startgp <= 599) or startgp >= 950) and ntype == \"normal\" and id >= 20 and hqchance <= 70 then\n\t\tlocal gift2 = ActionList:Get(1, gift2_id)\n\t\tif gp_current >= 100 and table.valid(gift2) and gift2:IsReady() and not buffDB[759] then\n\t\t\td([[[SkillProfile] - Cast Gift 2]])\n\t\t\treturn gift2_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Gift2",
		normal = true,
		reqchain = "C",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- KY/BH2\n\tif startgp >= 600 and ntype == \"normal\" and id >= 20 then\n\t\tlocal ky2_bh2 = ActionList:Get(1, ky2_bh2_id)\n\t\tif gp_current >= 500 and table.valid(ky2_bh2) and ky2_bh2:IsReady() and not buffDB[219] then\n\t\t\td([[[SkillProfile] - Cast KY/BH2]])\n\t\t\treturn ky2_bh2_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "KY/BH2",
		normal = true,
		reqchain = "C",
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\tlocal playergather = Player:GetStats(72)\n\tlocal reqgather = 0\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- BH/BY2\n\tif ntype == \"normal\" and id >= 20 then\n\t\tlocal by2_bh2 = ActionList:Get(1, by2_bh2_id)\n\t\tif startgp >= 100 and gp_current >= 100 and table.valid(by2_bh2) and by2_bh2:IsReady() and not buffDB[1286] then then\n\t\t\tif req_level <= 459 then\n\t\t\t\td([[[SkillProfile] - Node < 450 - Cast BY/BH2]])\n\t\t\t\treturn by2_bh2_id\n\t\t\t\telseif req_level > 699 then reqgather = (((req_level - 700)*10)+5085)*.9\n\t\t\t\telseif req_level > 689 then reqgather = (((req_level - 690)*10)+4965)*.9\n\t\t\t\telseif req_level > 679 then reqgather = (((req_level - 680)*10)+4845)*.9\n\t\t\t\telseif req_level > 669 then reqgather = (((req_level - 670)*10)+4725)*.9\n\t\t\t\telseif req_level > 659 then reqgather = (((req_level - 660)*10)+4605)*.9\n\t\t\t\telseif req_level > 649 then reqgather = (((req_level - 650)*10)+4485)*.9\n\t\t\t\telseif req_level > 639 then reqgather = (((req_level - 640)*10)+4365)*.9\n\t\t\t\telseif req_level > 629 then reqgather = (((req_level - 630)*10)+4245)*.9\n\t\t\t\telseif req_level > 619 then reqgather = (((req_level - 620)*10)+4125)*.9\n\t\t\t\telseif req_level > 609 then reqgather = (((req_level - 610)*10)+4005)*.9\n\t\t\t\telseif req_level > 599 then reqgather = (((req_level - 600)*10)+3885)*.9\n\t\t\t\telseif req_level > 589 then reqgather = (((req_level - 590)*10)+3765)*.9\n\t\t\t\telseif req_level > 579 then reqgather = (((req_level - 580)*10)+3645)*.9\n\t\t\t\telseif req_level > 569 then reqgather = (((req_level - 570)*10)+3525)*.9\n\t\t\t\telseif req_level > 559 then reqgather = (((req_level - 560)*10)+3420)*.9\n\t\t\t\telseif req_level > 539 then reqgather = (((req_level - 540)*10)+3210)*.9\n\t\t\t\telse \t\t\t\t\t reqgather = (((req_level - 460)*10)+2400)*.9\n\t\t\tend\n\t\t\tif playergather >= reqgather then\n\t\t\t\td([[[SkillProfile] - Cast BY/BH2]])\n\t\t\t\treturn by2_bh2_id\n\t\t\tend\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "BH/BY2",
		normal = true,
		reqchain = "C",
		singlecheck = false,
		singleuse = false,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		id = 0,
		legend = true,
		name = "Empty Block",
		name2 = "<<< Spiritbond >>>",
		normal = true,
		singlecheck = true,
		singleuse = true,
		unspoil = true,
	},
	
	{
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- WttW\n\tif ntype == \"legend\" and id >= 20 and attempts <= (attemptsmax - 1) then\n\t\tlocal min_wise = ActionList:Get(1, min_wise_id)\n\t\tif table.valid(min_wise) and min_wise:IsReady() then\n\t\t\td([[[SkillProfile] - Cast WttW]])\n\t\t\treturn min_wise_id\n\t\tend\n\t\tlocal bot_wise = ActionList:Get(1, bot_wise_id)\n\t\tif table.valid(bot_wise) and bot_wise:IsReady() then\n\t\t\td([[[SkillProfile] - Cast WttW]])\n\t\t\treturn bot_wise_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "WttW",
		normal = true,
		reqchain = "D",
		singlecheck = false,
		singleuse = false,
		unspoil = true,
	},
	
	{
		addchain = "D",
		chainNot = "A,B,C",
		ephemeral = true,
		g_skfunc = "--- g_skfunc(itemid, buffDB ,normal_data , collect_data , node_data)\n--- d(itemid) , d(buffDB) , d(normal_data)-- normal gather widowdata , d(collect_data)-- collectable windowdata  ;then you can get datainside from console\n--- d(node_data) -- node specific recorded data\n\nif table.valid(normal_data) then\n    \n\t--- values from gather_window\n\tlocal chance = normal_data.chance\n\tlocal hqchance = normal_data.hqchance\n\tlocal g_level = normal_data.level\n\tlocal yield = normal_data.quantity\n\tlocal req_level = normal_data.requiredlevel\n\tlocal id = normal_data.id\n\n\t--- values from node\n\tlocal ntype = node_data.ntype\n\tlocal startgp = node_data.startgp\n\tlocal node  = Player:GetTarget()\n\tlocal attemptsmax = node.gatherattemptsmax\n\tlocal attempts = node.gatherattempts\n\n\t--- values from player\n\tlocal job = Player.job\n\tlocal gp_current = Player.gp.current\n\tlocal gp_frac = (math.floor(gp_current/50) % 2)\n\n    --- skill ids\n    local gift_id = job == 16 and 21177 or 21178\n    local gift2_id = job == 16 and 25589 or 25590\n    local tidings_id = job == 16 and 21203 or 21204\n    local ky2_bh2_id = job == 16 and 241 or 224\n\tlocal by2_bh2_id = job == 16 and 272 or 273\n    local min_wise_id = 26521\n\tlocal bot_wise_id = 26522\n    local solid_id = job == 16 and 232 or 215\n    \n\t--- Solid\n\tif ntype == \"legend\" and id >= 20 and attempts <= (attemptsmax - 2) then\n\t\tlocal solid = ActionList:Get(1, solid_id)\n\t\tif gp_current >= 300 and table.valid(solid) and solid:IsReady() then\n\t\t\td([[[SkillProfile] - Cast Solid]])\n\t\t\treturn solid_id\n\t\tend\n\tend\nend",
		id = -2,
		legend = true,
		name = "Assign Skill From Script",
		name2 = "Solid",
		normal = true,
		singlecheck = false,
		singleuse = false,
		unspoil = true,
	},
}



return tbl